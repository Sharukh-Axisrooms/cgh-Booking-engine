{"ast":null,"code":"import _asyncToGenerator from \"/home/klouud-dev/Documents/Axisroom/cgh-Booking-engine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BASE_URL, BOOKING_ENGINE_ID, getDefaultHeaders } from '../shared/constants/url.constants';\nimport { cloneDeep } from 'lodash-es';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./booking.service\";\nexport class PaymentService {\n  constructor(http, bookingService) {\n    this.http = http;\n    this.bookingService = bookingService;\n  }\n\n  createOrderAndMakePayment(bookingItem, personalDetailsForm) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.createOrder(bookingItem).subscribe(res1 => {\n        _this.makePayment(bookingItem, personalDetailsForm);\n      });\n    })();\n  }\n\n  createOrder(bookingItem) {\n    let params = {\n      bookingEngineId: BOOKING_ENGINE_ID,\n      productId: bookingItem.hotelId,\n      searchId: bookingItem.searchId,\n      checkIn: bookingItem.checkIn,\n      checkOut: bookingItem.checkOut,\n      cityId: bookingItem.renderData.address.cityId,\n      paxInfo: bookingItem.paxInfo,\n      selectedrooms: `{\"1\":{\"productId\":${bookingItem.hotelId},\"roomMap\":{\"0\":{\"roomId\":${bookingItem.rooms[0].roomId},\"ratePlanId\":${bookingItem.rooms[0].ratePlanId},\"addOnMap\":{},\"addchildMap\":{},\"policyChargeScope\":{}}}}}`\n    };\n    return this.http.get(`${BASE_URL}api/be/rooms`, {\n      params: params,\n      headers: getDefaultHeaders()\n    });\n  }\n\n  makePayment(bookingItem, personalDetails) {\n    this.bookingService.setPGLoaderFlag();\n    let item = cloneDeep(bookingItem);\n    this.bookingService.removeCurrentBookingItemFromList();\n    let url1 = `https://app.axisrooms.com/beV2/hotelBooking.html?currency=1&`;\n    let url2 = `searchId=${item.searchId}&promoCodeApplied=&promoCode=&`;\n    let url3 = `tokenvalues=&master_pax_first_name=${personalDetails.firstName}&master_pax_last_name=${personalDetails.lastName}&`;\n    let url4 = `contactEmail=${personalDetails.emailId}&contactMobile=${personalDetails.mobileNo}&`;\n    let url5 = `additional_request=${personalDetails.specialRequest}&payAtHotel=false&cardType=4&cardNO=&`;\n    let url6 = `cardValidity_month=&cardValidity_year=&cardHolderName=&cardValidity_cvv=`;\n    let finalUrl = url1 + url2 + url3 + url4 + url5 + url6;\n    window.open(finalUrl, '_self');\n  }\n\n}\n\nPaymentService.ɵfac = function PaymentService_Factory(t) {\n  return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BookingService));\n};\n\nPaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaymentService,\n  factory: PaymentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/klouud-dev/Documents/Axisroom/cgh-Booking-engine/src/app/services/payment.service.ts"],"names":["BASE_URL","BOOKING_ENGINE_ID","getDefaultHeaders","cloneDeep","i0","i1","i2","PaymentService","constructor","http","bookingService","createOrderAndMakePayment","bookingItem","personalDetailsForm","createOrder","subscribe","res1","makePayment","params","bookingEngineId","productId","hotelId","searchId","checkIn","checkOut","cityId","renderData","address","paxInfo","selectedrooms","rooms","roomId","ratePlanId","get","headers","personalDetails","setPGLoaderFlag","item","removeCurrentBookingItemFromList","url1","url2","url3","firstName","lastName","url4","emailId","mobileNo","url5","specialRequest","url6","finalUrl","window","open","ɵfac","PaymentService_Factory","t","ɵɵinject","HttpClient","BookingService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { BASE_URL, BOOKING_ENGINE_ID, getDefaultHeaders, } from '../shared/constants/url.constants';\nimport { cloneDeep } from 'lodash-es';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./booking.service\";\nexport class PaymentService {\n    constructor(http, bookingService) {\n        this.http = http;\n        this.bookingService = bookingService;\n    }\n    async createOrderAndMakePayment(bookingItem, personalDetailsForm) {\n        this.createOrder(bookingItem).subscribe((res1) => {\n            this.makePayment(bookingItem, personalDetailsForm);\n        });\n    }\n    createOrder(bookingItem) {\n        let params = {\n            bookingEngineId: BOOKING_ENGINE_ID,\n            productId: bookingItem.hotelId,\n            searchId: bookingItem.searchId,\n            checkIn: bookingItem.checkIn,\n            checkOut: bookingItem.checkOut,\n            cityId: bookingItem.renderData.address.cityId,\n            paxInfo: bookingItem.paxInfo,\n            selectedrooms: `{\"1\":{\"productId\":${bookingItem.hotelId},\"roomMap\":{\"0\":{\"roomId\":${bookingItem.rooms[0].roomId},\"ratePlanId\":${bookingItem.rooms[0].ratePlanId},\"addOnMap\":{},\"addchildMap\":{},\"policyChargeScope\":{}}}}}`,\n        };\n        return this.http.get(`${BASE_URL}api/be/rooms`, {\n            params: params,\n            headers: getDefaultHeaders(),\n        });\n    }\n    makePayment(bookingItem, personalDetails) {\n        this.bookingService.setPGLoaderFlag();\n        let item = cloneDeep(bookingItem);\n        this.bookingService.removeCurrentBookingItemFromList();\n        let url1 = `https://app.axisrooms.com/beV2/hotelBooking.html?currency=1&`;\n        let url2 = `searchId=${item.searchId}&promoCodeApplied=&promoCode=&`;\n        let url3 = `tokenvalues=&master_pax_first_name=${personalDetails.firstName}&master_pax_last_name=${personalDetails.lastName}&`;\n        let url4 = `contactEmail=${personalDetails.emailId}&contactMobile=${personalDetails.mobileNo}&`;\n        let url5 = `additional_request=${personalDetails.specialRequest}&payAtHotel=false&cardType=4&cardNO=&`;\n        let url6 = `cardValidity_month=&cardValidity_year=&cardHolderName=&cardValidity_cvv=`;\n        let finalUrl = url1 + url2 + url3 + url4 + url5 + url6;\n        window.open(finalUrl, '_self');\n    }\n}\nPaymentService.ɵfac = function PaymentService_Factory(t) { return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BookingService)); };\nPaymentService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PaymentService, factory: PaymentService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}