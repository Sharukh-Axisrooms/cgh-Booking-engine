{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let Reflector = /*#__PURE__*/(() => {\n  class Reflector {\n    constructor() {\n      this.reactions = {};\n      this.model = {};\n      this.HOOKS = {\n        BOOKING_CART: 'BOOKING_CART'\n      };\n      this.reload();\n    }\n\n    reload() {\n      try {\n        this.model = JSON.parse(localStorage.getItem('reflectStore') + '');\n        Object.keys(this.model).forEach(key => {\n          this.reactions[key] = new BehaviorSubject(this.model[key]);\n        });\n\n        if (this.model == undefined || this.model == 'undefined') {\n          this.model = {};\n        }\n      } catch (e) {}\n    }\n\n    set(key, value) {\n      if (this.model == null) {\n        this.model = {};\n        this.reactions = {};\n      }\n\n      this.model[key] = value;\n\n      if (this.reactions[key] == undefined) {\n        this.reactions[key] = new BehaviorSubject(value);\n      }\n\n      localStorage.setItem('reflectStore', JSON.stringify(this.model));\n      this.reactions[key].next(value);\n    }\n\n    get(key) {\n      return this.model[key];\n    }\n\n    observe(key) {\n      if (this.reactions[key] == undefined) {\n        if (this.model == null) {\n          this.model = {};\n          this.reactions = {};\n        }\n\n        if (this.model[key] === null || this.model[key] === undefined) {\n          this.model[key] = {};\n        }\n\n        this.reactions[key] = new BehaviorSubject(this.model[key]);\n      }\n\n      return this.reactions[key];\n    }\n\n    clear(key) {\n      this.model[key] = {};\n\n      if (this.reactions[key] == undefined) {\n        this.reactions[key] = new BehaviorSubject(this.model[key]);\n      }\n\n      localStorage.setItem('reflectStore', JSON.stringify(this.model));\n      this.reactions[key].next({});\n    }\n\n  }\n\n  Reflector.ɵfac = function Reflector_Factory(t) {\n    return new (t || Reflector)();\n  };\n\n  Reflector.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Reflector,\n    factory: Reflector.ɵfac,\n    providedIn: 'root'\n  });\n  return Reflector;\n})();","map":null,"metadata":{},"sourceType":"module"}