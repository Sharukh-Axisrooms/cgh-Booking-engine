{"ast":null,"code":"import _asyncToGenerator from \"/home/klouud-dev/Documents/Axisroom/cgh-Booking-engine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { forkJoin } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BASE_URL, BOOKING_ENGINE_ID, getDefaultHeaders } from '../shared/constants/url.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SearchService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  getHotels(params) {\n    return this.http.get(`${BASE_URL}api/be/search`, {\n      params: params,\n      headers: getDefaultHeaders()\n    });\n  }\n\n  getRooms(params) {\n    return this.http.get(`${BASE_URL}api/be/rooms`, {\n      params: params,\n      headers: getDefaultHeaders()\n    });\n  }\n\n  searchRooms(params) {\n    return this.getHotels(params).pipe(mergeMap(data => this.getRoomData(data)));\n  }\n\n  getRoomData(data) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let roomObservables = (_a = data['Hotel_Details']) === null || _a === void 0 ? void 0 : _a.map(e => {\n        let params = {};\n        params['bookingEngineId'] = BOOKING_ENGINE_ID;\n        params['searchId'] = data['search_id'];\n        params['productId'] = e.hotel_id;\n        return _this.getRooms(params).pipe(map(roomData => {\n          var _a;\n\n          for (let i = 0; i < ((_a = data['Hotel_Details']) === null || _a === void 0 ? void 0 : _a.length); i++) {\n            if (roomData['HotelDetails'][0]['hotelId'] === data['Hotel_Details'][i]['hotel_id']) {\n              data['Hotel_Details'][i]['rooms'] = roomData['HotelDetails'][0]['rooms'];\n              break;\n            }\n          }\n        }));\n      });\n\n      if (roomObservables) {\n        yield forkJoin(roomObservables).toPromise();\n        data['Hotel_Details'] = data['Hotel_Details'].filter(e => e['rooms'] != undefined);\n      }\n\n      return data;\n    })();\n  }\n\n  getAllHotels() {\n    return this.http.get(`${BASE_URL}api/be/search`, {\n      params: {\n        bookingEngineId: BOOKING_ENGINE_ID\n      },\n      headers: getDefaultHeaders()\n    });\n  }\n\n}\n\nSearchService.ɵfac = function SearchService_Factory(t) {\n  return new (t || SearchService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nSearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SearchService,\n  factory: SearchService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}